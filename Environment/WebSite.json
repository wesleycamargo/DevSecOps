{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "hostingPlanName": {
      "type": "string",
      "minLength": 1
    },
    "skuName": {
      "type": "string",
      "defaultValue": "F1",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and capacity. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "skuCapacity": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "metadata": {
        "description": "Describes plan's instance count"
      }
    },
    "identityName": {
      "type": "string",
      "defaultValue": "[concat('spn-', uniqueString(resourceGroup().id))]"
    },
    "storageAccountName":{
      "type": "string",
      "defaultValue": "[concat('stg', uniqueString(resourceGroup().id))]"
    },
    "storageAccountNameConnectionStringName":{
      "type": "string",
      "defaultValue": "storageAccountCnnString"
    },
    "webSiteName":{
      "type": "string",
      "defaultValue": "[concat('webSite', uniqueString(resourceGroup().id))]"
    }

  },
  "variables": {},
  "resources": [
    {
      "apiVersion": "2015-08-01",
      "name": "[parameters('hostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "HostingPlan"
      },
      "sku": {
        "name": "[parameters('skuName')]",
        "capacity": "[parameters('skuCapacity')]"
      },
      "properties": {
        "name": "[parameters('hostingPlanName')]"
      }
    },
    {
      "apiVersion": "2015-08-01",
      "name": "[parameters('webSiteName')]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))]": {}
        }
      },

      "tags": {
        "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "Resource",
        "displayName": "Website"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('identityName'))]"
      ],
      "properties": {
        "name": "[parameters('webSiteName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]"
      }
    },
    
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "name": "[parameters('identityName')]",
      "apiVersion": "2018-11-30",
      "location": "[resourceGroup().location]"
  }
  ,
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2016-10-01",
      "name": "kv-testewebapp",
      "location": "eastus2",
      "dependsOn": ["[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('identityName'))]"],
      "properties": {
          "sku": {
              "family": "A",
              "name": "standard"
          },
          "tenantId": "[reference(concat('Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('identityName')),'2018-11-30', 'Full').properties.tenantId]",
          "accessPolicies": [
              {
                  "tenantId": "[reference(concat('Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('identityName')),'2018-11-30', 'Full').properties.tenantId]",
                  "objectId": "[reference(concat('Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('identityName')),'2018-11-30', 'Full').properties.principalId]",
                  "permissions": {
                      "secrets": [
                          "get",
                          "list"
                      ]
                  }
              }
          ],
          "enabledForDeployment": false
      }
  },

  {
    "name": "[parameters('storageAccountName')]",
    "type": "Microsoft.Storage/storageAccounts",
    "apiVersion": "2018-02-01",
    "location": "[resourceGroup().location]",
    "tags": {},
    "kind": "StorageV2",
    "sku": {
      "name": "Standard_LRS"
    },
    "properties": {
      "accessTier": "Hot"
    }
  },

  {
    "type": "Microsoft.KeyVault/vaults/secrets",
    "apiVersion": "2016-10-01",
    "name": "[concat('kv-testewebapp', '/',parameters('storageAccountNameConnectionStringName'))]",
    "location": "[resourceGroup().location]",
    "dependsOn": [
      "[resourceId('Microsoft.KeyVault/vaults', 'kv-testewebapp')]",
      "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]"
    ],
    "properties": {
      "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'),';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value,';EndpointSuffix=core.windows.net')]",
      "attributes": {
        "enabled": true
      }
    }
  }


  ],
  "outputs": {
    "teste":{
      "type": "string",
      "value": "[reference(concat('Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('identityName')),'2018-11-30', 'Full').properties.principalId]"

    },
    "stgAccount":{
      "type": "object",
      "value": "[reference(concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName')),'2018-02-01', 'Full')]"

    }
  }
}